
Things to think about:
- syntax for concurrently running things, define individual threads?, run procedures?
- working with modules, or a class-based system like java?
- call-by-value or call-by-reference? (value for the Win)


class Main {

	Int val = 2;
	Lock lock = new Lock;

	Bool val2 = True;

	if (val2) {
		val2 = False;
	}

	val2 = True;

	while (val < 4) {
		val++;
	}

	val = 0;
	Bool works = False;

	@Threaded (5) { // Would work like a fork-join. (end of block joins)
		lock.lock();
		val++;
		lock.unlock();

		@Threaded (3) {
			lock.lock();
			val++;
			lock.unlock();
		}
	}

	if (val == 20) {
		works = True;
	} else {
		val = -99999;
	}

	// Peterson algorithm

	Bool[] flag = [False,False];
	Int turn = 0;

	@Threaded (2) {
		flag[Thread.id] = True;
		Int other = 0;

		if (Thread.id == 0) {
			other = 1;
		}

		while (flag[other] == True && turn == other) {
			// busy wait
		}

		// critical section

		flag[Thread.id] = False;
	}



	// Banking system

	Lock bankLock = new Lock;

	Int mybank = 100;

	@Threaded (5) { 
		bankLock.lock();
		// make deposits n that

		bankLock.unlock();
	}

}
