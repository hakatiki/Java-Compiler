import Sprockell
prog :: [Instruction]
prog = [
    Load (ImmValue 0) regA,
    WriteInstr regA (DirAddr 0),
    ReadInstr (IndAddr regSprID),
    Receive regA,
    Compute Equal regSprID reg0 regB,
    Branch regB (Rel 4),
    Compute NEq regA regSprID regB,
    Branch regB (Ind regA),
    Jump (Rel (-6)),
    Load (ImmValue 0 ) regA,
    Store regA (DirAddr 0 ),
    Load (DirAddr 0 ) regA,
    Push regA,
    Load (ImmValue 5 ) regA,
    Pop regB,
    Compute Lt regB regA regA,
    Load (ImmValue 0) regE,
    Compute Equal regE regA regA,
    Branch regA (Rel 10),
    Load (ImmValue 69 ) regA,
    WriteInstr regA numberIO,
    Load (DirAddr 0 ) regA,
    Push regA,
    Load (ImmValue 1 ) regA,
    Pop regB,
    Compute Add regB regA regA,
    Store regA (DirAddr 0 ),
    Jump (Rel  (-16)),
    Compute Add reg0 regPC regA,
    Compute Equal regSprID reg0 regB,
    Branch regB (Rel 2),
    EndProg,
    EndProg]
main = run [prog]
