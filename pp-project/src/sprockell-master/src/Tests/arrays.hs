import Sprockell
prog :: [Instruction]
prog = [
    Load (ImmValue 0) regA,
    WriteInstr regA (DirAddr 0),
    ReadInstr (IndAddr regSprID),
    Receive regA,
    Compute Equal regSprID reg0 regB,
    Branch regB (Rel 4),
    Compute NEq regA regSprID regB,
    Branch regB (Ind regA),
    Jump (Rel (-6)),
    Load (ImmValue 1) regA,
    Store regA (DirAddr 0),
    Load (ImmValue 2) regA,
    Store regA (DirAddr 1),
    Load (ImmValue 3) regA,
    Store regA (DirAddr 2),
    Load (ImmValue 4) regA,
    Store regA (DirAddr 3),
    Load (ImmValue 5) regA,
    Store regA (DirAddr 4),
    Load (ImmValue 1) regA,
    Store regA (DirAddr 5),
    Load (ImmValue 0) regA,
    Store regA (DirAddr 6),
    Load (ImmValue 1) regA,
    Store regA (DirAddr 7),
    Load (ImmValue 0) regA,
    Store regA (DirAddr 8),
    Load (ImmValue 0) regA,
    Load (ImmValue 5) regB,
    Compute Add regB regA regA,
    Load ( IndAddr regA) regA,
    Compute Equal regA reg0 regA,
    Branch regA (Rel 4),
    Load (ImmValue 999) regA,
    WriteInstr regA numberIO,
    Jump (Rel 1),
    Compute Add reg0 regPC regA,
    Compute Equal regSprID reg0 regB,
    Branch regB (Rel 2),
    EndProg,
    EndProg]
main = run [prog]
