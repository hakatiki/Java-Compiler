import Sprockell
prog :: [Instruction]
prog = [
    Load (ImmValue 0) regA,
    WriteInstr regA (DirAddr 0),
    Load (ImmValue 0 ) regA,
    Store regA (DirAddr 0 ),
    Load (ImmValue 0 ) regA,
    Store regA (DirAddr 1 ),
    Load (ImmValue 1 ) regA,
    Store regA (DirAddr 2 ),
    Load (ImmValue 2 ) regA,
    Store regA (DirAddr 3 ),
    Load (ImmValue 3 ) regA,
    Store regA (DirAddr 4 ),
    Load (ImmValue 4 ) regA,
    Store regA (DirAddr 5 ),
    Load (ImmValue 5 ) regA,
    Store regA (DirAddr 6 ),
    Load (DirAddr 0 ) regA,
    Push regA,
    Load (ImmValue 5 ) regA,
    Pop regB,
    Compute Gt regB regA regA,
    Branch regA (Rel 13),
    Load (DirAddr 0 ) regA,
    Load (ImmValue 1) regB,
    Compute Add regB regA regA,
    Load ( IndAddr regA ) regA,
    WriteInstr regA numberIO,
    Load (DirAddr 0 ) regA,
    Push regA,
    Load (ImmValue 1 ) regA,
    Pop regB,
    Compute Add regB regA regA,
    Store regA (DirAddr 0 ),
    Jump (Rel  (-17)),
    EndProg]
main = run [prog]
